/*면접
1번 자료형	
		 * 메서드명, 변수명은 소문자로시작한다.(cf. 클래스명은 대문자로 시작한다.)
		 * 변수 :데이터를 담는 그릇이며, 데이터의 저장과 창조를 위해 메모리공간을 할당받는다.
		 *     반드시 먼저 선언: 컴파일러는 변수의 저료형에 맞는 기억공간을 미리 확보
		 *     선언 : 자료형 변수형: 예)int age;
		 *     선언과 동시에 할당 : 자료형 변수형 = 초기화; 예) int age = 30;
		 *     
		 *1. 기본자료형(Primitive Type) : 실제값이 저장
		 *	 정수형 : byte(1바이트) - short(2바이트) - int (4바이트) - long(8바이트
		 *	실수형 : float(4바이트) - double(8바이트)
		 *  문자형 : char(2바이트)
		 *  부울형 : boolean(true/false)
		 *   
		 *2. 참조형(Reference Type) : 실제 객체를 가리키는 주소값만 저장
		 *     클래스, 인터페이스, 배열
		 *
		 *3. 문자형 : String 클래스
		 * 
		 
		 ================================================
2번 상수
		 상수 : 프로그램이 실행되는동안 값이 변하지 않는 수 또는 변경불가능한 수
		 *  	final 키워드는 변수의 값이 대입되고 나면 ,변수값이 더이상 변경되지 않는다는 의미
		 *  	주로 대문자를 사용
		 *  	만일 값변경시 상수를 선언한 부분의 값만 변경한다
		 .
		 //PI = 3.15; // 오류 : 상수는 final로 선언하면 변경불가
		 ================================================
3번 구구단예재 (주로 for문)
	for / while 		 
		 
4번 객체설명
* 인스턴스 생성 : 클래스명 참조변수명 = new 클래스명(); // new 생성자;
*       접근 : 참조변수명.멤버변수
*            참조변수명.멤버메서드
* - 참조변수명애는 생성한 인스터스의 힘메모리공간 주소값이 들어있다. 스택메모리에 생성
*   앞의 클래스명은 데이터타입이고, 참조변수명으로 접근할때 사용한다.
*   뒤의 클래스명은 힙메모리의 인스턴스 생성시 사용되는 생성자이다.               
*/ 	
			  		 
/*클래스 : 객체에 대한 설계도, 디자인 (붕어빵틀)
	 *        -멤버변수(속성, 필드) + 멈버메소드(기능, 동작) + 생성자
	 *        
	 * 클래스는 설계도(디자인)이며, 인스턴스는 이 설계도를 바탕으로 만들어진 힙메모리 공간이다.
	 *        그 결과 주소값이 만들어지며, 참조변수에 할당된다.
	 *        객체는 인스턴스라고도 한다
	 
5번 settet/gettet

6번 생성자 오버로드 vs 상속 오버라이딩	 
// 생성자 오버로드
// [면접] 오버로드 : 메서드나 생성자의 매개변수 갯수가 다르거나, 매개변수 타입이 다른경우를 말한다.(단 return타입은 무관하다.)
	 
// 생성자 오버로드
	// [면접] 오버로드 : 메서드나 생성자의 매개변수 갯수가 다르거나, 매개변수 타입이 다른경우를 말한다.(단 return타입은 무관하다.)
	public _03_MemberInfo(String name, int age, String email) {
		System.out.println("매개변수 생성자");
		this.name = name;
		this.age = age;
		this.email = email;		
	}
	
	public _03_MemberInfo(String name, int age ) {
		System.out.println("매개변수 생성자");
		this.name = name;
		this.age = age;
				
	}
	
	
	// 멤버메서드
	public void setName(String name) {
		this.name = name;
	}
	public void setAge(int age) {
		if(age < 0) {
			System.out.println("나이는 양수로 입력하세요");
			return; //함수를 종료하며, 아래문장을 수행하지않는다.
		}
			this.age = age;
	}
	public void setEmail(String email) {
		this.email = email;
	}

	public void printInfo(){
		
		System.out.println("이름 : " + name);
		System.out.println("나이 : " + age);
		System.out.println("이메일 : " + email);	
	}
}	 
	    